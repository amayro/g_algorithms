# Примечания ко всем задачам урока:
# Решите задачу при помощи линейного алгоритма или алгоритма с ветвлением
# (цикл и рекурсии будут на уроке 2 и тут их не используем для решения).
# Аналогично п. 1. массивы пройдём на уроке 3, поэтому постарайтесь решить задачи без них.
# Если речь идёт о символах, используйте только строчные буквы английского алфавита.

import random


def task_section(task):
    print(f'\n{"":-^10} №{task} {"":-^10}')


# №1 ------------------------------------------------------------------------------------
task_section(1)
# Найти сумму и произведение цифр трехзначного числа, которое вводит пользователь.

# a, b, c = input('Введите число:')
a, b, c = '234'
a, b, c = int(a), int(b), int(c)

print(f'Сумма: {a + b + c}\n'
      f'Произведение: {a * b * c}')


# №2 ------------------------------------------------------------------------------------
task_section(2)
# Выполнить логические побитовые операции "И", "ИЛИ" и др. над числами 5 и 6.
# Выполнить над числом 5 побитовый сдвиг вправо и влево на два знака.

a = 5  # 0101
b = 6  # 0110

print(f'a {a} {bin(a)}\n'
      f'b {b} {bin(b)}\n'
      f'NOT {~a} {bin(~a)}\n'
      f'AND {a & b} {bin(a & b)}\n'
      f'OR {a | b} {bin(a | b)}\n'
      f'XOR {a ^ b} {bin(a ^ b)}\n'
      f'Битовый сдвиг влево {a << 2} {bin(a << 2)}\n'
      f'Битовый сдвиг вправо {a >> 2} {bin(a >> 2)}')


# №3 ------------------------------------------------------------------------------------
task_section(3)
# По введенным пользователем координатам двух точек вывести уравнение прямой вида
# y = kx + b, проходящей через эти точки.

# point_1 = input('Введите координаты первой точки через пробел:')
# point_2 = input('Введите координаты второй точки через пробел:')
point_1 = '-1 3'
point_2 = '4 8'

x1, y1 = point_1.split(" ")
x2, y2 = point_2.split(" ")
x1, y1, x2, y2 = float(x1), float(y1), float(x2), float(y2)

k = (y2 - y1) / (x2 - x1)
b = y1 - k * x1
print(f'Уравнение прямой: y = {k}x + {b}')


# №4 ------------------------------------------------------------------------------------
task_section(4)
# Написать программу, которая генерирует в указанных пользователем границах
# task_a - случайное целое число,
# task_b - случайное вещественное число,
# task_c - случайный символ.
# Для каждого из трех случаев пользователь задает свои границы диапазона.
# Например, если надо получить случайный символ от 'a' до 'f', то вводятся эти символы.
# Программа должна вывести на экран любой символ алфавита от 'a' до 'f' включительно.

# limits = input('Введите границы через пробел:')
limits = '5 9'
# limits = 'a f'
limit_left, limit_right = limits.split(" ")

try:
    limit_left, limit_right = int(limit_left), int(limit_right)
    task_a = random.randint(limit_left, limit_right)
    task_b = limit_left + (limit_right - limit_left) * random.random()
    print(task_a)
    print(task_b)
except ValueError:
    limit_left, limit_right = ord(limit_left), ord(limit_right)
    task_c = chr(random.randint(limit_left, limit_right))
    print(task_c)


# №5 ------------------------------------------------------------------------------------
task_section(5)
# Пользователь вводит две буквы. Определить, на каких местах алфавита они стоят, и сколько между ними находится букв.

# chars = input('Введите две буквы:')
chars = 'q e'
char_1, char_2 = chars.split(" ")
char_left, char_right = ord(char_1), ord(char_2)
if char_left > char_right:
    char_1, char_2 = char_2, char_1
    char_left, char_right = char_right, char_left

pos_1 = char_left - ord('a') + 1
pos_2 = char_right - ord('a') + 1
distance = char_right - char_left

print(f'Буква: {char_1}   Позиция: {pos_1}\n'
      f'Буква: {char_2}   Позиция: {pos_2}\n'
      f'Между ними {distance} букв')

# №6 ------------------------------------------------------------------------------------
task_section(6)
# Пользователь вводит номер буквы в алфавите. Определить, какая это буква.

# char_position = int(input('Введите номер буквы:'))
char_position = 5

if 0 < char_position <= 26:
    print(chr(char_position + ord('a') - 1))
else:
    print('Ошибка')


# №7 ------------------------------------------------------------------------------------
task_section(7)
# По длинам трех отрезков, введенных пользователем, определить возможность существования треугольника,
# составленного из этих отрезков. Если такой треугольник существует, то определить,
# является ли он разносторонним, равнобедренным или равносторонним.

# segments = input('Введите длины отрезков через пробел:')
segments = '1 2 2'
a, b, c = segments.split(" ")
a, b, c = int(a), int(b), int(c)

if a + b <= c or a + c <= b or b + c <= a:
    print("Треугольник не существует")
elif a != b and a != c and b != c:
    print("Разносторонний")
elif a == b == c:
    print("Равносторонний")
else:
    print("Равнобедренный")


# №8 ------------------------------------------------------------------------------------
task_section(8)
# Определить, является ли год, который ввел пользователем, високосным или не високосным.

# year = int(input('Введите год:'))
year = 2019

if year % 4 != 0 or (year % 100 == 0 and year % 400 != 0):
    print("Обычный")
else:
    print("Високосный")


# №9 ------------------------------------------------------------------------------------
task_section(9)
# Вводятся три разных числа. Найти, какое из них является средним (больше одного, но меньше другого).

# numbers = input('Введите три числа через пробел:')
numbers = '1 3 2'
a, b, c = numbers.split(" ")
a, b, c = int(a), int(b), int(c)

if b < a < c or c < a < b:
    print('Среднее:', a)
elif a < b < c or c < b < a:
    print('Среднее:', b)
else:
    print('Среднее:', c)
